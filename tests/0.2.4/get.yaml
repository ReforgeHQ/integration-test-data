---
version: 0.2.4
function: get
tests:
  - cases:
    - name: get returns a found value for key
      client: config_client
      function: get
      input:
        key: "my-test-key"
      expected:
        value: "my-test-value"

    - name: get returns nil if value not found
      client: config_client
      function: get
      input:
        key: "my-missing-key"
      expected:
        value: ~
      client_overrides:
        on_no_default: 2

    - name: get returns a default for a missing value if a default is given
      client: config_client
      function: get
      input:
        key: "my-missing-key"
        default: "DEFAULT"
      expected:
        value: "DEFAULT"

    - name: get ignores a provided default if the key is found
      client: config_client
      function: get
      input:
        key: "my-test-key"
        default: "DEFAULT"
      expected:
        value: "my-test-value"

    - name: get respects a provided namespace when initializing the client
      client: config_client
      function: get
      input:
        key: "my-test-key"
      expected:
        value: "my-namespaced-value"
      client_overrides:
        namespace: "test-namespace"

    - name: get can return a double
      client: config_client
      function: get
      input:
        key: "my-double-key"
      expected:
        value: 9.95

    - name: get can return a string list
      client: config_client
      function: get
      input:
        key: "my-string-list-key"
      expected:
        value:
          - a
          - b
          - c

    - name: can return an override based on the default context
      client: config_client
      function: get
      input:
        key: "my-overridden-key"
      expected:
        value: "overridden"

    - name: can return a value provided by an environment variable
      client: config_client
      function: get
      input:
        key: "prefab.secrets.encryption.key"
      expected:
        value: "c87ba22d8662282abe8a0e4651327b579cb64a454ab0f4c170b45b15f049a221"

    - name: can decrypt and return a secret value (with decryption key in in env var)
      client: config_client
      function: get
      input:
        key: "a.secret.config"
      expected:
        value: "hello.world"